# -*- coding: utf-8 -*-
"""my_app

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GZPDXiIgwIBcLw_ajtpEzFteM1EzYEG_
"""

import streamlit as st
import pandas as pd
import numpy as np
from PIL import Image
import pickle


st.sidebar.title('Churn Prediction')

#take user input
satisfaction_level = st.sidebar.number_input("satisfaction_level:",min_value=df.satisfaction_level.min(), max_value=df.satisfaction_level.max())
last_evaluation = st.sidebar.number_input("last_evaluation:",min_value=df.last_evaluation.min(), max_value=df.last_evaluation.max())
number_projects = st.sidebar.number_input("number_projects:",min_value=df.number_projects.min(), max_value=df.number_projects.max())
average_montly_hours = st.sidebar.number_input("average_montly_hours:",min_value=df.average_montly_hours.min(), max_value=df.average_montly_hours.max())
time_spent_company =  st.sidebar.number_input("time_spent_company:",min_value=df.time_spent_company.min(), max_value=df.time_spent_company.max())
work_accident =  st.sidebar.number_input("work_accident:",min_value=df.work_accident.min(), max_value=df.work_accident.max())
promotion_last_5years = st.sidebar.number_input("promotion_last_5years:",min_value=df.promotion_last_5years.min(), max_value=df.promotion_last_5years.max())
Departments = st.sidebar.number_input("Departments:",min_value=df.Departments.min(), max_value=df.Departments.max())
Salary = st.sidebar.number_input("Salary:",min_value=df.Salary.min(), max_value=df.Salary.max())



# To load machine learning model
final_model=pickle.load(open("xgb.pkl", "rb"))
final_model_encoder=pickle.load(open("encoder", "rb"))


# Create a dataframe using feature inputs
my_dict = {
    "satisfaction_level": satisfaction_level,
    "last_evaluation": last_evaluation,
    "number_projects": number_projects,
    "average_montly_hours": average_montly_hours,
    "time_spent_company": time_spent_company,
    "work_accident": work_accident,
    "promotion_last_5years": promotion_last_5years,
    "Departments": Departments,
    "Salary": Salary,
}

df = pd.DataFrame.from_dict([my_dict])

st.header(" The features of employee is below:")
st.table(df)

df2 = final_model_encoder.transform(df)

st.subheader("click predict")

if st.button("Predict"):
    prediction = final_model.predict(df2)

